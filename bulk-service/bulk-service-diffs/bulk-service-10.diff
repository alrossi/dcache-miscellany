diff --git a/modules/dcache-bulk/src/main/resources/org/dcache/services/bulk/bulk.xml b/modules/dcache-bulk/src/main/resources/org/dcache/services/bulk/bulk.xml
new file mode 100644
index 0000000000..0894832ff6
--- /dev/null
+++ b/modules/dcache-bulk/src/main/resources/org/dcache/services/bulk/bulk.xml
@@ -0,0 +1,146 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans
+           http://www.springframework.org/schema/beans/spring-beans.xsd
+           http://www.springframework.org/schema/context
+           http://www.springframework.org/schema/context/spring-context.xsd">
+
+  <context:property-placeholder/>
+  <context:annotation-config/>
+
+  <bean id="pnfs-manager-stub" class="org.dcache.cells.CellStub">
+    <description>PnfsManager communication stub</description>
+    <property name="destination" value="${bulk.service.pnfsmanager}"/>
+    <property name="timeout" value="${bulk.service.pnfsmanager.timeout}"/>
+    <property name="timeoutUnit" value="${bulk.service.pnfsmanager.timeout.unit}"/>
+  </bean>
+
+  <bean id="pin-manager-stub" class="org.dcache.cells.CellStub">
+    <description>PinManager communication stub</description>
+    <property name="destination" value="${bulk.service.pinmanager}"/>
+    <property name="timeout" value="${bulk.service.pinmanager.timeout}"/>
+    <property name="timeoutUnit" value="${bulk.service.pinmanager.timeout.unit}"/>
+  </bean>
+
+  <bean id="pool-manager-stub" class="org.dcache.cells.CellStub">
+    <description>PoolManager communication stub</description>
+    <property name="destination" value="${bulk.service.poolmanager}"/>
+    <property name="timeout" value="${bulk.service.poolmanager.timeout}"/>
+    <property name="timeoutUnit" value="${bulk.service.poolmanager.timeout.unit}"/>
+  </bean>
+
+  <bean id="pool-monitor" class="org.dcache.poolmanager.RemotePoolMonitor">
+    <description>Maintains runtime information about all pools</description>
+    <property name="poolManagerStub" ref="pool-manager-stub"/>
+  </bean>
+
+  <bean id="list-handler" class="org.dcache.util.list.ListDirectoryHandler">
+    <description>Client stub for directory listing</description>
+    <constructor-arg>
+      <bean class="diskCacheV111.util.PnfsHandler">
+        <constructor-arg ref="pnfs-manager-stub"/>
+      </bean>
+    </constructor-arg>
+  </bean>
+
+  <bean id="bulk-incoming-thread-executor"
+        class="org.dcache.util.CDCExecutorServiceDecorator"
+        destroy-method="shutdownNow">
+    <description>Used to execute request message handling</description>
+    <constructor-arg>
+      <bean class="org.dcache.util.BoundedCachedExecutor">
+        <constructor-arg value="${bulk.limits.message-handler-threads}"/>
+      </bean>
+    </constructor-arg>
+  </bean>
+
+  <bean id="bulk-job-executor"
+        class="org.dcache.util.CDCExecutorServiceDecorator"
+        destroy-method="shutdownNow">
+    <description>Used to execute jobs.</description>
+    <constructor-arg>
+      <bean class="org.dcache.util.BoundedCachedExecutor">
+        <constructor-arg value="${bulk.limits.job-execution-threads}"/>
+      </bean>
+    </constructor-arg>
+  </bean>
+
+  <bean id="bulk-clear-executor"
+        class="org.dcache.util.CDCScheduledExecutorServiceDecorator"
+        destroy-method="shutdownNow">
+    <description>Used to execute delayed clear requests.</description>
+    <constructor-arg>
+      <bean class="java.util.concurrent.ScheduledThreadPoolExecutor">
+        <constructor-arg value="${bulk.limits.request-store-clear-threads}"/>
+      </bean>
+    </constructor-arg>
+  </bean>
+
+  <bean id="request-store" class="org.dcache.services.bulk.store.file.FileBulkRequestStore">
+    <description>In-memory storage with file back-up for requests</description>
+    <constructor-arg name="storageDir" value="${bulk.store.request-store-dir}"/>
+    <constructor-arg name="delegate">
+        <bean class="org.dcache.services.bulk.store.memory.InMemoryBulkRequestStore"/>
+    </constructor-arg>
+    <property name="scheduler" ref="bulk-clear-executor"/>
+  </bean>
+
+  <bean id="job-store" class="org.dcache.services.bulk.store.memory.InMemoryBulkJobStore">
+      <description>In-memory Storage for jobs</description>
+  </bean>
+
+  <bean id="job-factory" class="org.dcache.services.bulk.job.BulkJobFactory">
+    <description>Factory for creating various types of bulk jobs; uses SPI to load providers.</description>
+  </bean>
+
+  <bean id="statistics" class="org.dcache.services.bulk.util.BulkServiceStatistics">
+    <description>Tracks request and jobs states (counts), sweeper state, etc.</description>
+  </bean>
+
+  <bean name="job-queue" class="org.dcache.services.bulk.queue.BulkServiceQueue">
+    <description>The central queuing mechanism for jobs from requests.</description>
+    <property name="requestStore" ref="request-store"/>
+    <property name="executorService" ref="bulk-job-executor"/>
+    <property name="maxRunningJobs" value="${bulk.limits.max-running-jobs}"/>
+    <property name="maxRunningRequests" value="${bulk.limits.max-running-requests}"/>
+    <property name="timeout" value="${bulk.limits.queue-sweep-interval}"/>
+    <property name="timeoutUnit" value="${bulk.limits.queue-sweep-interval.unit}"/>
+    <property name="completionHandler" ref="handler"/>
+    <property name="submissionHandler" ref="handler"/>
+    <property name="statistics" ref="statistics"/>
+  </bean>
+
+  <bean name="handler" class="org.dcache.services.bulk.handlers.BulkRequestHandler">
+    <description>Interacts with the queue, job factory and stores.</description>
+    <property name="requestStore" ref="request-store"/>
+    <property name="queue" ref="job-queue"/>
+    <property name="jobStore" ref="job-store"/>
+    <property name="jobFactory" ref="job-factory"/>
+    <property name="statistics" ref="statistics"/>
+    <property name="listHandler" ref="list-handler"/>
+    <property name="pnfsManager" ref="pnfs-manager-stub"/>
+    <property name="pinManager" ref="pin-manager-stub"/>
+    <property name="poolManager" ref="pool-manager-stub"/>
+    <property name="poolMonitor" ref="pool-monitor"/>
+  </bean>
+
+  <bean id="bulk-service" class="org.dcache.services.bulk.BulkService">
+    <description>Initializes queue; handles incoming messages.</description>
+    <property name="incomingExecutorService" ref="bulk-incoming-thread-executor"/>
+    <property name="maxRequestsPerUser" value="${bulk.limits.max-requests-per-user}"/>
+    <property name="queue" ref="job-queue"/>
+    <property name="requestStore" ref="request-store"/>
+    <property name="submissionHandler" ref="handler"/>
+    <property name="statistics" ref="statistics"/>
+  </bean>
+
+  <bean id="admin-commands" class="org.dcache.services.bulk.admin.BulkServiceCommands">
+    <description>Holds the various commands for administrative purposes.</description>
+    <property name="service" ref="bulk-service"/>
+    <property name="jobFactory" ref="job-factory"/>
+    <property name="jobStore" ref="job-store"/>
+    <property name="requestHandler" ref="handler"/>
+  </bean>
+</beans>
diff --git a/packages/fhs/src/main/assembly/filter.properties b/packages/fhs/src/main/assembly/filter.properties
index ca199665d3..d8852759d4 100644
--- a/packages/fhs/src/main/assembly/filter.properties
+++ b/packages/fhs/src/main/assembly/filter.properties
@@ -100,5 +100,6 @@ srmUserCredentialsDirectory=/var/lib/dcache/credentials
 dcache.pid.dir=/var/run
 dcache.paths.lock.file=/var/run/subsys/dcache
 dcache.paths.alarms=/var/lib/dcache/alarms
+dcache.paths.bulk=/var/lib/dcache/bulk
 dcache.paths.resilience=/var/lib/dcache/resilience
 dcache.paths.pool-history=/var/lib/dcache/pool-history
diff --git a/packages/fhs/src/main/deb/postinst b/packages/fhs/src/main/deb/postinst
index cce5b472ac..5acc2b8941 100755
--- a/packages/fhs/src/main/deb/postinst
+++ b/packages/fhs/src/main/deb/postinst
@@ -23,6 +23,7 @@ Please fix this and reinstall this package." >&2
     # ensure directory ownership
     chown dcache:dcache /var/lib/dcache
     chown dcache:dcache /var/lib/dcache/alarms
+    chown dcache:dcache /var/lib/dcache/bulk
     chown dcache:dcache /var/lib/dcache/config
     chown dcache:dcache /var/lib/dcache/billing
     chown dcache:dcache /var/lib/dcache/httpd
@@ -35,6 +36,7 @@ Please fix this and reinstall this package." >&2
 
     # protect directories that only dCache should access
     chmod 700 /var/lib/dcache/alarms
+    chmod 700 /var/lib/dcache/bulk
     chmod 700 /var/lib/dcache/credentials
     chmod 700 /var/lib/dcache/httpd
     chmod 700 /var/lib/dcache/pool-history
diff --git a/packages/fhs/src/main/rpm/dcache-server.spec b/packages/fhs/src/main/rpm/dcache-server.spec
index fd401c1c93..939d68837f 100644
--- a/packages/fhs/src/main/rpm/dcache-server.spec
+++ b/packages/fhs/src/main/rpm/dcache-server.spec
@@ -110,6 +110,7 @@ rm -rf $RPM_BUILD_ROOT
 %attr(-,dcache,dcache) /var/log/dcache
 %attr(-,dcache,dcache) /var/lib/dcache/config
 %attr(700,dcache,dcache) /var/lib/dcache/alarms
+%attr(700,dcache,dcache) /var/lib/dcache/bulk
 %attr(700,dcache,dcache) /var/lib/dcache/credentials
 %attr(700,dcache,dcache) /var/lib/dcache/httpd
 %attr(700,dcache,dcache) /var/lib/dcache/pool-history
diff --git a/packages/system-test/src/main/assembly/filter.properties b/packages/system-test/src/main/assembly/filter.properties
index f1b4d66ce7..72ebd9eeb3 100644
--- a/packages/system-test/src/main/assembly/filter.properties
+++ b/packages/system-test/src/main/assembly/filter.properties
@@ -65,5 +65,7 @@ srmUserCredentialsDirectory=${dcache.home}/var/credentials
 dcache.pid.dir=${dcache.home}/var/run
 dcache.paths.lock.file=
 dcache.paths.alarms=${dcache.home}/var/alarms
+dcache.paths.bulk=${dcache.home}/var/bulk
 dcache.paths.resilience=${dcache.home}/var/resilience
 dcache.paths.pool-history=${dcache.home}/var/pool-history
+
diff --git a/packages/tar/src/main/assembly/filter.properties b/packages/tar/src/main/assembly/filter.properties
index b2e791d40a..92df0fe2d5 100644
--- a/packages/tar/src/main/assembly/filter.properties
+++ b/packages/tar/src/main/assembly/filter.properties
@@ -110,4 +110,5 @@ srmUserCredentialsDirectory=${dcache.home}/var/credentials
 dcache.pid.dir=${dcache.home}/var/run
 dcache.paths.lock.file=
 dcache.paths.alarms=${dcache.home}/var/alarms
+dcache.paths.bulk=${dcache.home}/var/bulk
 dcache.paths.resilience=${dcache.home}/var/resilience
diff --git a/packages/tar/src/main/assembly/tar.xml b/packages/tar/src/main/assembly/tar.xml
index e4e1d4c103..588ac93be4 100644
--- a/packages/tar/src/main/assembly/tar.xml
+++ b/packages/tar/src/main/assembly/tar.xml
@@ -85,6 +85,7 @@
             <outputDirectory></outputDirectory>
             <includes>
                 <include>var/alarms/**</include>
+                <include>var/bulk/**</include>
                 <include>var/credentials/**</include>
                 <include>var/httpd/**</include>
                 <include>var/log/**</include>
diff --git a/skel/share/defaults/bulk.properties b/skel/share/defaults/bulk.properties
new file mode 100644
index 0000000000..3fef83b371
--- /dev/null
+++ b/skel/share/defaults/bulk.properties
@@ -0,0 +1,85 @@
+#  -----------------------------------------------------------------------
+#     Default values for bulk service
+#  -----------------------------------------------------------------------
+@DEFAULTS_HEADER@
+
+#  ---- Cell name of the bulk service
+#
+bulk.cell.name=${dcache.service.bulk}
+
+bulk.cell.consume=${bulk.cell.name}
+bulk.cell.subscribe=${bulk.pool-monitor.topic}
+
+#  ---- Main bulk area
+#
+bulk.dir=@dcache.paths.bulk@
+
+#  ---- For internal use only.
+#
+(immutable)bulk.limits.job-execution-threads=${bulk.limits.max-running-jobs}
+
+#  ---- Number of individual tasks which can run concurrently
+#
+bulk.limits.max-running-jobs=100
+
+#  ---- Number of independent requests which can be processed concurrently
+#       This sets a loose upper bound on the number jobs/tasks held
+#       in the queues.
+#
+bulk.limits.max-running-requests=20
+
+#  ---- Prevents users from monopolizing the service.
+#       The limit is in terms of the number of submitted requests
+#       which have not yet completed.  It does not currently
+#       observed completed but uncleared requests.
+#
+bulk.limits.max-requests-per-user=5
+
+#  ---- Number of threads available for incoming request processing.
+#
+bulk.limits.message-handler-threads=20
+
+#  ---- Interval of inactivity by the queue consumer if not signalled
+#       internally (as for instance when a job completes).
+#
+#       Given the latency (time-to-completion) of bulk operations,
+#       the queue consumer need not wake up on its own frequently.
+#
+bulk.limits.queue-sweep-interval=3
+(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)bulk.limits.queue-sweep-interval.unit=MINUTES
+
+#  ---- If a user requests a delay before a completed request is cleared,
+#       it is scheduled by an executor with this number of available threads.
+#
+bulk.limits.request-store-clear-threads=5
+
+#  ---- Requests (but not individual tasks/jobs) are stored on disk so that
+#       they survive restarts.
+#
+bulk.store.request-store-dir=${bulk.dir}/requests
+
+# ---- Endpoint for contacting pnfs manager.
+#
+bulk.service.pnfsmanager=${dcache.service.pnfsmanager}
+
+# ---- How long to wait for a response from the pnfs manager.
+#
+bulk.service.pnfsmanager.timeout=1
+(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)bulk.service.pnfsmanager.timeout.unit=MINUTES
+
+# ---- Endpoint for contacting pin manager.
+#
+bulk.service.pinmanager=${dcache.service.pinmanager}
+
+# ---- How long to wait for a response from the pin manager.
+#
+bulk.service.pinmanager.timeout=1
+(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)bulk.service.pinmanager.timeout.unit=MINUTES
+
+# ---- Endpoint for contacting pool manager.
+#
+bulk.service.poolmanager=${dcache.service.poolmanager}
+
+# ---- How long to wait for a response from the pool manager.
+#
+bulk.service.poolmanager.timeout=1
+(one-of?MILLISECONDS|SECONDS|MINUTES|HOURS|DAYS)bulk.service.poolmanager.timeout.unit=MINUTES
+
+# Topic on which to expect pool monitor updates
+bulk.pool-monitor.topic = ${dcache.pool-monitor.topic}
diff --git a/skel/share/defaults/dcache.properties b/skel/share/defaults/dcache.properties
index 34c2bf4923..5b3fcdcd4f 100644
--- a/skel/share/defaults/dcache.properties
+++ b/skel/share/defaults/dcache.properties
@@ -517,6 +517,7 @@ dcache.service.topo = ${dcache.queue.topo}
 dcache.service.info = ${dcache.queue.info}
 dcache.service.srmmanager = ${dcache.queue.srmmanager}
 dcache.service.history = history
+dcache.service.bulk = bulk
 
 
 #  -----------------------------------------------------------------------
diff --git a/skel/share/defaults/paths.properties b/skel/share/defaults/paths.properties
index 9f90d59edf..b106f37b2d 100644
--- a/skel/share/defaults/paths.properties
+++ b/skel/share/defaults/paths.properties
@@ -25,6 +25,7 @@ dcache.paths.lock.file=@dcache.paths.lock.file@
 dcache.paths.classes=@dcache.paths.classes@
 dcache.paths.lib=@dcache.paths.lib@
 dcache.paths.billing=@dcache.paths.billing@
+dcache.paths.bulk=@dcache.paths.bulk@
 dcache.paths.statistics=@dcache.paths.statistics@
 dcache.paths.zookeeper=@dcache.paths.zookeeper@
 dcache.paths.plugins=@dcache.paths.plugins@
diff --git a/skel/share/services/bulk.batch b/skel/share/services/bulk.batch
new file mode 100644
index 0000000000..ad7c13e2a7
--- /dev/null
+++ b/skel/share/services/bulk.batch
@@ -0,0 +1,28 @@
+# Starts bulk service
+
+onerror shutdown
+
+check -strong bulk.cell.name
+check -strong bulk.cell.consume
+check -strong bulk.cell.subscribe
+check -strong bulk.dir
+check -strong bulk.limits.max-running-jobs
+check -strong bulk.limits.max-running-requests
+check -strong bulk.limits.queue-sweep-interval
+check -strong bulk.limits.queue-sweep-interval.unit
+check -strong bulk.limits.max-requests-per-user
+check -strong bulk.limits.message-handler-threads
+check -strong bulk.limits.request-store-clear-threads
+check -strong bulk.pool-monitor.topic
+check -strong bulk.store.request-store-dir
+check -strong bulk.service.pnfsmanager
+check -strong bulk.service.pnfsmanager.timeout
+check -strong bulk.service.pnfsmanager.timeout.unit
+check -strong bulk.service.pinmanager
+check -strong bulk.service.pinmanager.timeout
+check -strong bulk.service.pinmanager.timeout.unit
+check -strong bulk.service.poolmanager
+check -strong bulk.service.poolmanager.timeout
+check -strong bulk.service.poolmanager.timeout.unit
+
+create org.dcache.cells.UniversalSpringCell ${bulk.cell.name} \
+    "classpath:org/dcache/services/bulk/bulk.xml \
+    -consume=${bulk.cell.consume} \
+   -subscribe=${bulk.cell.subscribe}"
diff --git a/skel/var/bulk/.empty-dir b/skel/var/bulk/.empty-dir
new file mode 100644
index 0000000000..e69de29bb2
